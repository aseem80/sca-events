<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.nordstrom.org</groupId>
    <artifactId>sca-events</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.boot.version>2.0.0.RELEASE</spring.boot.version>
        <spring-kafka.version>2.0.0.RELEASE</spring-kafka.version>
        <docker.image.prefix>org</docker.image.prefix>
        <avro.version>1.8.2</avro.version>
        <scmUser>place-holder</scmUser> <!-- Passed in via command line -->
        <scmPass>place-holder</scmPass> <!-- Passed in via command line -->
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <beanstalk.versionLabel>${maven.build.timestamp}</beanstalk.versionLabel>
        <beanstalk.env.aws.elasticbeanstalk.application.environment.SPRING_PROFILES_ACTIVE>${spring.profiles.active}</beanstalk.env.aws.elasticbeanstalk.application.environment.SPRING_PROFILES_ACTIVE>
        <beanstalk.env.aws.elasticbeanstalk.application.environment.ORG_SCA_EVENTS_HOME>${maven.aws.elasticbeanstalk.application.environment.ORG_SCA_EVENTS_HOME}</beanstalk.env.aws.elasticbeanstalk.application.environment.ORG_SCA_EVENTS_HOME>

        <beanstalk.env.aws.autoscaling.updatepolicy.rollingupdate.RollingUpdateType>Immutable</beanstalk.env.aws.autoscaling.updatepolicy.rollingupdate.RollingUpdateType>
        <beanstalk.env.aws.elasticbeanstalk.command.DeploymentPolicy>Immutable</beanstalk.env.aws.elasticbeanstalk.command.DeploymentPolicy>
        <beanstalk.env.aws.elasticbeanstalk.healthreporting.system.SystemType>enhanced</beanstalk.env.aws.elasticbeanstalk.healthreporting.system.SystemType>

        <beanstalk.keyName>${maven.beanstalk.keyName}</beanstalk.keyName>
        <beanstalk.imageId>${maven.beanstalk.imageId}</beanstalk.imageId>
        <beanstalk.environmentType>${maven.beanstalk.environmentType}</beanstalk.environmentType>
        <beanstalk.vpcId>${maven.beanstalk.vpcId}</beanstalk.vpcId>
        <beanstalk.iamInstanceProfile>${maven.beanstalk.iamInstanceProfile}</beanstalk.iamInstanceProfile>
        <beanstalk.instanceType>${maven.beanstalk.instanceType}</beanstalk.instanceType>
        <beanstalk.tag.scheduler-asg-desiredminmax>${maven.beanstalk.tag.scheduler.scheduler-asg-desiredminmax.value}</beanstalk.tag.scheduler-asg-desiredminmax>
        <beanstalk.tag.CreatedBy>${maven.beanstalk.tag.scheduler.CreatedBy.value}</beanstalk.tag.CreatedBy>

        <beanstalk.applicationHealthCheckURL>/actuator/health</beanstalk.applicationHealthCheckURL>
        <beanstalk.env.aws.ec2.vpc.Subnets>${maven.beanstalk.env.aws.ec2.vpc.Subnets}</beanstalk.env.aws.ec2.vpc.Subnets>
        <beanstalk.env.aws.elasticbeanstalk.environment.ServiceRole>aws-elasticbeanstalk-service-role</beanstalk.env.aws.elasticbeanstalk.environment.ServiceRole>

        <beanstalk.env.aws.elasticbeanstalk.healthreporting.system.ConfigDocument>${maven.beanstalk.healthreporting.system.ConfigDocument}</beanstalk.env.aws.elasticbeanstalk.healthreporting.system.ConfigDocument>


    </properties>

    <scm>
        <!-- Automated versioning fails without including username/password, -->
        <!-- but we don't want clear-text passwords here. -->
        <!-- Hence we use properties that must be overridden in order to use them. -->
        <developerConnection>scm:git:https://${scmUser}:${scmPass}@gitlab.nordstrom.com/ORG/sca-events.git
        </developerConnection>
        <!-- Just a placeholder, maven-release:prepare overrides this -->
        <tag>sca-events-1.0.0</tag>
    </scm>

    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spray</id>
            <name>Spray</name>
            <url>http://repo.spray.io</url>
        </repository>
        <repository>
            <id>nordstrom-repo</id>
            <name>Nordstrom Repository</name>
            <url>https://mvnrepo.nordstrom.net/nexus/content/groups/public</url>
        </repository>
    </repositories>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.RELEASE</version>
    </parent>
    <name>sca-events</name>
    <profiles>
        <!-- The Configuration of the development profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--
                    Specifies the build.profile.id property that must be equal than the name of
                    the directory that contains the profile specific configuration file.
                    Because the name of the directory that contains the configuration file of the
                    development profile is dev, we must set the value of the build.profile.id
                    property to dev.
                -->
                <build.profile.id>dev</build.profile.id>
                <!--
                    Only unit tests are run when the development profile is active
                -->
                <skip.integration.tests>true</skip.integration.tests>
                <skip.unit.tests>false</skip.unit.tests>
            </properties>
        </profile>
        <!-- The Configuration of the integration-test profile -->
        <profile>
            <id>integration-test</id>
            <properties>
                <!--
                    Specifies the build.profile.id property that must be equal than the name of
                    the directory that contains the profile specific configuration file.
                    Because the name of the directory that contains the configuration file of the
                    integration-test profile is integration-test, we must set the value of the
                    build.profile.id property to integration-test.
                -->
                <build.profile.id>integration-test</build.profile.id>
                <!--
                    Only integration tests are run when the integration-test profile is active
                -->
                <skip.integration.tests>false</skip.integration.tests>
                <skip.unit.tests>true</skip.unit.tests>
            </properties>
            <build>
                <plugins>

                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.20.1</version>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <!-- "build" should be used to create the images with the
                                         artifact -->
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>${docker.image.prefix}/${project.artifactId}:${project.version}</name>
                                            <build>
                                                <from>frolvlad/alpine-oraclejdk8:slim</from>
                                                <maintainer>aseem.kapoor@nordstrom.com</maintainer>
                                                <tags>
                                                    <tag>latest</tag>
                                                    <tag>${project.version}</tag>
                                                </tags>
                                                <ports>
                                                    <port>5000</port>
                                                </ports>
                                                <entryPoint>
                                                    <!-- exec form for ENTRYPOINT -->
                                                    <exec>
                                                        <arg>java</arg>
                                                        <arg>-jar</arg>
                                                        <arg>/${project.build.finalName}.jar</arg>
                                                    </exec>
                                                </entryPoint>
                                            </build>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>prepare-it-environment</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>wurstmeister/zookeeper:latest</name>
                                            <alias>zookeeper</alias>
                                            <run>
                                                <ports>
                                                    <port>2181:2181</port>
                                                </ports>
                                                <wait>
                                                    <tcp>
                                                        <ports>
                                                            <port>2181</port>
                                                        </ports>
                                                    </tcp>
                                                </wait>
                                            </run>
                                        </image>
                                        <image>
                                            <name>wurstmeister/kafka:1.0.1</name>
                                            <alias>kafka</alias>
                                            <run>
                                                <dependsOn>
                                                    <container>zookeeper</container>
                                                </dependsOn>
                                                <ports>
                                                    <port>9092:9092</port>
                                                </ports>
                                                <env>
                                                    <KAFKA_ADVERTISED_HOST_NAME>192.168.99.102</KAFKA_ADVERTISED_HOST_NAME>
                                                    <KAFKA_ADVERTISED_PORT>9092</KAFKA_ADVERTISED_PORT>
                                                    <KAFKA_ZOOKEEPER_CONNECT>192.168.99.102:2181</KAFKA_ZOOKEEPER_CONNECT>
                                                </env>
                                                <wait>
                                                    <tcp>
                                                        <ports>
                                                            <port>9092</port>
                                                        </ports>
                                                    </tcp>
                                                </wait>
                                            </run>
                                        </image>
                                        <image>
                                            <name>${docker.image.prefix}/${project.artifactId}:${project.version}</name>
                                            <alias>sca-events</alias>
                                            <run>
                                                <dependsOn>
                                                    <container>kafka</container>
                                                    <container>zookeeper</container>
                                                </dependsOn>
                                                <ports>
                                                    <port>5000:5000</port>
                                                </ports>
                                                <env>
                                                    <SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS>192.168.99.102:9092</SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS>
                                                    <SPRING_KAFKA_CONSUMER_BOOTSTRAP-SERVERS>192.168.99.102:9092</SPRING_KAFKA_CONSUMER_BOOTSTRAP-SERVERS>
                                                </env>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>

                            <execution>
                                <id>remove-containers</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <!--
                                Invokes both the integration-test and the verify goals of the
                                Failsafe Maven plugin
                            -->
                            <execution>
                                <id>integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <!--
                                        Skips integration tests if the value of skip.integration.tests
                                        property is true
                                    -->
                                    <skipTests>${skip.integration.tests}</skipTests>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deploy-non-prod</id>
            <build>
                <plugins>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>deploy/non-prod.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>br.com.ingenieux</groupId>
                        <artifactId>beanstalk-maven-plugin</artifactId>
                        <version>1.5.0</version>
                        <configuration>
                            <applicationName>org-sca-event-stream-processor</applicationName>
                            <s3Bucket>elasticbeanstalk-us-west-2-383427504773</s3Bucket>
                            <regionName>us-west-2</regionName>
                            <artifactFile>${project.build.directory}/${project.build.finalName}.zip</artifactFile>
                            <s3Key>${project.artifactId}/${project.build.finalName}-${maven.build.timestamp}.zip</s3Key>
                            <cnamePrefix>${maven.beanstalk.cnameprefix}</cnamePrefix>
                            <environmentName>${maven.beanstalk.environmentName}</environmentName>
                            <environmentRef>${maven.beanstalk.environmentRef}</environmentRef>
                            <solutionStack>64bit Amazon Linux 2017.09 v2.6.8 running Java 8</solutionStack>
                            <copyOptionSettings>false</copyOptionSettings>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <profile>
            <id>deploy-prod</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>deploy/prod.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>br.com.ingenieux</groupId>
                        <artifactId>beanstalk-maven-plugin</artifactId>
                        <version>1.5.0</version>
                        <configuration>
                            <applicationName>org-sca-event-stream-processor</applicationName>
                            <s3Bucket>elasticbeanstalk-us-west-2-748949561341</s3Bucket>
                            <regionName>us-west-2</regionName>
                            <artifactFile>${project.build.directory}/${project.build.finalName}.zip</artifactFile>
                            <s3Key>${project.artifactId}/${project.build.finalName}-${maven.build.timestamp}.zip</s3Key>
                            <cnamePrefix>${maven.beanstalk.cnameprefix}</cnamePrefix>
                            <environmentName>>${maven.beanstalk.environmentName}</environmentName>
                            <environmentRef>${maven.beanstalk.environmentRef}</environmentRef>
                            <solutionStack>64bit Amazon Linux 2017.09 v2.6.8 running Java 8</solutionStack>
                            <copyOptionSettings>false</copyOptionSettings>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

    </profiles>

    <dependencies>

        <!-- spring-boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>2.0.0</version>
        </dependency>


        <!-- spring-kafka -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>${spring-kafka.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.retry/spring-retry -->
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <version>1.2.2.RELEASE</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>


        <!-- avro -->
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3 -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.11.312</version>
        </dependency>

        <!--Documentation -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.7.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>


        <!-- Metrics https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-datadog -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-datadog</artifactId>
            <version>1.0.4</version>
            <exclusions>
                <exclusion>
                    <groupId>io.micrometer</groupId>
                    <artifactId>micrometer-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.micrometer/micrometer-core -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>1.0.4</version>
        </dependency>


        <!--Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <version>${spring-kafka.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
            <scope>test</scope>
        </dependency>



        <!--Metrics -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Title>${project.name}</Implementation-Title>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.4</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate-the-git-infos</id>
                        <goals>
                            <goal>validateRevision</goal>
                        </goals>
                        <!-- *NOTE*: The default phase of validateRevision is verify, but in case you want to change it, you can do so by adding the phase here -->
                        <phase>package</phase>
                    </execution>
                </executions>

                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                    <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
                    <verbose>false</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <format>properties</format>
                    <skipPoms>true</skipPoms>
                    <injectAllReactorProjects>false</injectAllReactorProjects>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                    <skip>false</skip>
                    <runOnlyOnce>false</runOnlyOnce>
                    <excludeProperties>
                        <excludeProperty>git.user.*</excludeProperty>
                    </excludeProperties>
                    <includeOnlyProperties>
                    </includeOnlyProperties>
                    <useNativeGit>false</useNativeGit>
                    <abbrevLength>7</abbrevLength>
                    <commitIdGenerationMode>flat</commitIdGenerationMode>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <abbrev>7</abbrev>
                        <dirty>-dirty</dirty>
                        <match>*</match>
                        <tags>false</tags>
                        <forceLongFormat>false</forceLongFormat>
                    </gitDescribe>
                    <validationShouldFailIfNoMatch>true</validationShouldFailIfNoMatch>
                    <evaluateOnCommit>HEAD</evaluateOnCommit>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>prepare</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <unzip src="${project.build.directory}/${project.build.finalName}.jar" dest="${project.build.directory}/${project.build.finalName}" />
                                <copy todir="${project.build.directory}/${project.build.finalName}/" overwrite="false">
                                    <fileset dir="./" includes=".ebextensions/**"/>
                                </copy>
                                <!-- <jar jarfile="${project.build.directory}/${project.build.finalName}.jar" basedir="${project.build.directory}/${project.build.finalName}"/>-->
                                <zip compress="false" destfile="${project.build.directory}/${project.build.finalName}.zip" basedir="${project.build.directory}/${project.build.finalName}"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


</project>